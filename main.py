import os
import random
from flask import Flask
import mysql.connector

app = Flask(__name__)

DB_USER = "db-assignment-part1"
DB_PASSWORD = "D7xo/x,qx3NX;E9>"
DB_NAME = "db-random-numbers"
CLOUD_SQL_CONNECTION_NAME = "valued-etching-380113:europe-west1:db-assignment-part1"


def connect_db():
    config = {
        "user": DB_USER,
        "password": DB_PASSWORD,
        "database": DB_NAME,
        "unix_socket": f"/cloudsql/{CLOUD_SQL_CONNECTION_NAME}"
    }
    return mysql.connector.connect(**config)


@app.route("/")
def index():
    instance_id = os.environ.get("GAE_INSTANCE", "unknown")
    return f"Instance ID: {instance_id}"


@app.route("/generate-numbers")
def generate_numbers():
    instance_id = os.environ.get("GAE_INSTANCE", "unknown")

    # Generate a random number and insert to db
    random_number = random.randint(0, 100000)
    conn = connect_db()
    cursor = conn.cursor()
    cursor.execute(f"INSERT INTO random_numbers (number, instance) VALUES ({random_number}, '{instance_id}')")
    conn.commit()
    conn.close()

    return f"Random Number {random_number} generated"


@app.route("/get-results")
def get_results():
    # Connect to the database
    conn = connect_db()

    smallest_number = 0
    smallest_instance = 0
    largest_number = 0
    largest_instance = 0
    table = ""

    # Function to get smallest and largest from database
    with conn.cursor() as cursor:
        # Retrieve min num
        cursor.execute("SELECT number, instance FROM random_numbers WHERE number = (SELECT MIN(number) FROM random_numbers)")
        result = cursor.fetchall()
        smallest_number = result[0][0]
        smallest_instance = result[0][1]

        # Retrieve max num
        cursor.execute("SELECT number, instance FROM random_numbers WHERE number = (SELECT MAX(number) FROM random_numbers)")
        result = cursor.fetchall()
        largest_number = result[0][0]
        largest_instance = result[0][1]

        cursor.execute("SELECT instance, COUNT(*) AS num_generated FROM random_numbers GROUP BY instance")
        result_set = cursor.fetchall()

        # HTML table
        table = "<table><tr><th>Instance</th><th>Number Generated</th></tr>"
        for row in result_set:
            table += f"<tr><td>{row[0]}</td><td style='text-align: center'>{row[1]}</td></tr>"
        table += "</table>"

    conn.close()

    message = f"<p>Smallest number: {smallest_number}. Generated by instance ID: {smallest_instance}.</p><br><br><p>Largest number: {largest_number}. Generated by instance ID: {largest_instance}</p>"

    return message + "<br><br><br>" + table


if __name__ == "__main__":
    app.run()
